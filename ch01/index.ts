// 1. 자바스크립트에서 타입스크립트로

// 1.2 바닐라 자바스크립트의 함정
// 중요한 언어 확장이나 프레임워크 없이 자바스크립트를 사용하는 것을 '바닐라Vanilla'라고 부른다.
// 한 마디로 순수한 자바스크립트를 의미한다.

// 1.2.1 값 비싼 자유
// 자바스크립트를 사용하는 개발자들의 가장 큰 불만은 불행히도 핵심 기능에 있다.
// 자바스크립트는 사실상 코드를 구성하는 방법에 제한이 없다.
// 자바와 같은 언어는 컴파일러가 충돌할 수 있다고 판단하면, 코드 실행을 거부할 수 있다.
// 하지만 자바스크립트처럼 충돌 가능성을 먼저 확인하지 않고, 코드를 실행하는 동적(Dynamic)타입 언어는 그렇지 않다.

// 1.2.2 부족한 문서
// 자바스크립트 언어 사양에는 함수의 매개변수, 함수 반환, 변수 또는 다른 구성 요소의 의미를 설명하는 표준화된 내용이 없다.
// 따라서 많은 개발자가 블록 주석으로 함수와 변수를 설명하는 JSDoc 표준을 채택했다.
// 그러나 JSDoc의 설명이 코드가 잘못되는 것을 막을 수 없다.
// 그러나 JSDoc의 설명이 이전에는 정확했더라도 코드 리펙터링 중에 생긴 변경사항과 관련된 현재 유효하지 않는 JSDoc의 주석을 모두 찾기란 너무 어렵다.
// 복잡한 객체를 설명할 때는 다루기 어렵고 장황해서 타입과 그 관계를 정의하려면 다수의 독립형 주석이 필요하다.

// 1.3 타입스크립트
// 타입스크립트는 2010년대 초에 마이크로소프트 내부에서 만들어진 후 2012년에 출시 및 오픈 소스화 되었다.
// 타입스크립트는 종종 '자바스크립트의 상위 집합(Superset)' 혹은 '타입이 있는 자바스크립트'로 설명되곤 한다.
// 타입스크립트란 무엇인가?
// - 프로그래밍 언어: 자바스크립트의 모든 구문과, 타입을 정의하고 사용하기 위한 새로운 타입스크립트 고유 구문이 포함된 언어
// - 타입 검사기: 자바스크립트 및 타입스크립트로 작성된 일련의 파일에서 생성된 모든 구성 요소(변수, 함수 등)를 이해하고, 잘못 구성된 부분을 알려주는 프로그램
// - 컴파일러: 타입 검사기를 실행하고 문제를 보고한 후 이에 대응되는 자바스크립트 코드를 생성하는 프로그램
// - 언어 서비스: 타입 검사기를 사용해 VS Code와 같은 편집기에 개발자에게 유용한 유틸리티 제공법을 알려주는 프로그램

console.blub("Nothing is worth more than laughter.");

// 위 코드 오류: Property 'blub' does not exist on type 'Console'.
// 실제로 blub은 console에 존재하지 않는다.
// 타입스크립트를 정상적으로 작동시키기 위해 코드를 수정하기 전에, tsc가 console.blub를 포함해 index.js를 생성했다는 점에 주목하자.

// 이는 매우 중요한 개념이다.
// 비록 코드에 오류가 있었지만, 구문은 여전히 완벽하게 유효하다. 타입스크립트 컴파일러는 타입 오류와는 상관없이 입력 파일로부터 자바스크립트를 계속 생성한다.

console.log("Hello, TypeScript!!");

// 1.6 타입스크립트에 대한 오해
// 1.6.1 잘못된 코드 해결책
// 타입스크립트는 자바스크립트 코드를 구조화하는 데 도움이 되지만, 타입 안정성 강화를 제외하고는 해당 구조가 어떻게 보여야 하는지에 대해서는 어떤 것도 강요하지 않는다.
